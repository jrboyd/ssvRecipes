% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_scatter_with_side_density.R,
%   R/functions_scatterplot_with_side_density.R
\name{plot_scatter_side_density.xy}
\alias{plot_scatter_side_density.xy}
\title{plot  a scatterplot with sets in color}
\usage{
plot_scatter_side_density.xy(
  xy_data,
  x_,
  y_,
  id_ = "id",
  set_ = "set",
  labs_x = x_,
  labs_y = y_,
  labs_sets = set_,
  main_title = NULL,
  main_title.x = 0.02,
  main_title.y = 0.5,
  main_title.hjust = 0,
  main_title.vjust = 0.5,
  sets.colors = NULL,
  bg.string = "background",
  bg.color = "gray70",
  sets.sizes = 1,
  bg.size = 0.5,
  xlim_ = NULL,
  ylim_ = NULL,
  n_auto_label = 8,
  manual_label = NULL,
  label_size = 2,
  label_color = "black",
  label_use_shadow = TRUE,
  ref_line.x = 0,
  ref_line.x.color = "gray50",
  ref_line.y = 0,
  ref_line.y.color = "gray50",
  ref_line.slope = 1,
  ref_line.slope.color = "black",
  suppress_plot = FALSE,
  rel_widths = c(2, 1),
  rel_heights = c(1, 2)
)

plot_scatter_side_density.xy(
  xy_data,
  x_,
  y_,
  id_ = "id",
  set_ = "set",
  labs_x = x_,
  labs_y = y_,
  labs_sets = set_,
  main_title = NULL,
  main_title.x = 0.02,
  main_title.y = 0.5,
  main_title.hjust = 0,
  main_title.vjust = 0.5,
  sets.colors = NULL,
  bg.string = "background",
  bg.color = "gray70",
  sets.sizes = 1,
  bg.size = 0.5,
  xlim_ = NULL,
  ylim_ = NULL,
  n_auto_label = 8,
  manual_label = NULL,
  label_size = 2,
  label_color = "black",
  label_use_shadow = TRUE,
  ref_line.x = 0,
  ref_line.x.color = "gray50",
  ref_line.y = 0,
  ref_line.y.color = "gray50",
  ref_line.slope = 1,
  ref_line.slope.color = "black",
  suppress_plot = FALSE,
  rel_widths = c(2, 1),
  rel_heights = c(1, 2)
)
}
\arguments{
\item{xy_data}{}

\item{x_}{}

\item{y_}{}

\item{id_}{}

\item{set_}{}

\item{labs_x}{}

\item{labs_y}{}

\item{labs_sets}{}

\item{main_title}{}

\item{main_title.x}{}

\item{main_title.y}{}

\item{main_title.hjust}{}

\item{main_title.vjust}{}

\item{sets.colors}{}

\item{bg.string}{string specifying the background set. default is "background".
background is always plotted at the bottom and omitted from density.}

\item{bg.color}{}

\item{sets.sizes}{}

\item{bg.size}{}

\item{xlim_}{}

\item{ylim_}{}

\item{n_auto_label}{}

\item{manual_label}{}

\item{label_size}{}

\item{label_color}{}

\item{label_use_shadow}{}

\item{ref_line.x}{}

\item{ref_line.x.color}{}

\item{ref_line.y}{}

\item{ref_line.y.color}{}

\item{ref_line.slope}{}

\item{ref_line.slope.color}{}

\item{suppress_plot}{}

\item{label_GEOM}{geom function to use for labels.  default is shadowtext::geom_shadowtext.
consider, geom_label, ggrepel::geom_text_repel etc.}
}
\value{
a list of two intems, grob of assembled plot and a list of grobs for all components.


}
\description{
plot  a scatterplot with sets in color

plot  a scatterplot with sets in color
}
\examples{
n = 50
xy_data = rbind(
  data.table(x = rnorm(10*n, 0, 1), y = rnorm(10*n, 0, 1), set = "background"),
  data.table(x = rnorm(2*n, 2, 1), y = rnorm(2*n, 0, 1), set = "set1"),
  data.table(x = rnorm(2*n, 0, 1), y = rnorm(2*n, 2, 1), set = "set2"),
  data.table(x = rnorm(2*n, 2, 1), y = rnorm(2*n, 2, 1), set = "set3")
)
xy_data$id = seq_len(nrow(xy_data))

#by default, an assembled plot is output to graphic device
plot_scatter_side_density.xy(xy_data, x_ = "x", y_ = "y")

#a list with assembled plots and components are also returned for extra customization
#here's an example with lots of extra options used
plots = plot_scatter_side_density.xy(xy_data, x_ = "x", y_ = "y", suppress_plot = TRUE,
ref_line.x = c(0, 2), ref_line.y = c(0, 2), 
ref_line.x.color = c("gray70", "forestgreen"),
ref_line.y.color = c("gray70", "forestgreen"),
labs_x = "fc x", labs_y = "fc y", labs_sets = "group", main_title = "an important plot")
plots$assembled
new_lim = c(-5, 10)
comp = plots$components
comp$scatter = comp$scatter + coord_cartesian(xlim = new_lim, ylim = new_lim)
comp$x_density = comp$x_density + coord_cartesian(xlim = new_lim)
comp$y_density = comp$y_density + coord_flip(xlim = new_lim)
plot_scatter_side_density.assemble(comp, main_title = "new limits")

xy_df = as.data.frame(xy_data[,1:3])
rownames(xy_df) = xy_data$id
plot_scatter_side_density.xy(xy_df)

library(data.table)
library(ggplot2)
n = 50
xy_data = rbind(
  data.table(x = rnorm(10*n, 0, 1), y = rnorm(10*n, 0, 1), set = "background"),
  data.table(x = rnorm(2*n, 2, 1), y = rnorm(2*n, 0, 1), set = "set1"),
  data.table(x = rnorm(2*n, 0, 1), y = rnorm(2*n, 2, 1), set = "set2"),
  data.table(x = rnorm(2*n, 2, 1), y = rnorm(2*n, 2, 1), set = "set3")
)
xy_data$id = seq_len(nrow(xy_data))

#by default, an assembled plot is output to graphic device
plot_scatter_side_density.xy(xy_data, x_ = "x", y_ = "y")

#a list with assembled plots and components are also returned invisibly for extra customization
#here's an example with lots of extra options used
plot_res = plot_scatter_side_density.xy(
  xy_data, 
  x_ = "x", 
  y_ = "y", 
  suppress_plot = TRUE,
  ref_line.x = c(0, 2), 
  ref_line.y = c(0, 2), 
  ref_line.x.color = c("gray70", "forestgreen"),
  ref_line.y.color = c("gray70", "forestgreen"),
  labs_x = "fc x", 
  labs_y = "fc y", 
  labs_sets = "group", 
  main_title = "an important plot")

plot_res$assembled

#as an example we override the limits for all plot components
new_lim = c(-5, 10)
comp = plot_res$components
comp$scatter = comp$scatter + coord_cartesian(xlim = new_lim, ylim = new_lim)
comp$x_density = comp$x_density + coord_cartesian(xlim = new_lim)
comp$y_density = comp$y_density + coord_flip(xlim = new_lim)
plot_scatter_side_density.assemble(comp, main_title = "an important plot : with new limits")

}
